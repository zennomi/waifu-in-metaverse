/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/vr_gallery.glb --transform --types 
Files: public/vr_gallery.glb [63.69MB] > /home/zennomi/hust/r3f/vr_gallery-transformed.glb [1.69MB] (97%)
Author: dylanheyes (https://sketchfab.com/dylanheyes)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/vr-gallery-14ff70243a9c4c9c86af455335f2bed9
Title: VR Gallery
*/

import * as THREE from 'three'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { MeshCollider, RigidBody } from '@react-three/rapier'

type GLTFResult = GLTF & {
  nodes: {
    Gallery_Structure_0: THREE.Mesh
    Gallery_Backwall_0: THREE.Mesh
    Benches_Benches_0: THREE.Mesh
    Benches_Chrome_0: THREE.Mesh
    Podiums_Podiums_0: THREE.Mesh
    Portraits_PaintingFrame_0: THREE.Mesh
    Portraits_Portraits_0: THREE.Mesh
  }
  materials: {
    Structure: THREE.MeshStandardMaterial
    Backwall: THREE.MeshStandardMaterial
    Benches: THREE.MeshStandardMaterial
    Chrome: THREE.MeshStandardMaterial
    Podiums: THREE.MeshStandardMaterial
    PaintingFrame: THREE.MeshStandardMaterial
    Portraits: THREE.MeshStandardMaterial
  }
}

export function Gallery(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/vr_gallery.glb') as GLTFResult
  return (
    <RigidBody mass={1} type="fixed" position={[0, 4, 0]} colliders={"trimesh"}>
      <group {...props} dispose={null}>
        <mesh geometry={nodes.Gallery_Structure_0.geometry} material={materials.Structure} rotation={[-Math.PI / 2, -Math.PI / 2, 0]} scale={[1.643, 1.643, 4.928]} />
        <mesh geometry={nodes.Gallery_Backwall_0.geometry} material={materials.Backwall} rotation={[-Math.PI / 2, -Math.PI / 2, 0]} scale={[1.643, 1.643, 4.928]} />
        <mesh geometry={nodes.Benches_Benches_0.geometry} material={materials.Benches} position={[0, -2.842, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={0.306} />
        <mesh geometry={nodes.Benches_Chrome_0.geometry} material={materials.Chrome} position={[0, -2.842, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={0.306} />
        <mesh geometry={nodes.Podiums_Podiums_0.geometry} material={materials.Podiums} position={[0, -2.962, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={0.382} />
        <mesh geometry={nodes.Portraits_PaintingFrame_0.geometry} material={materials.PaintingFrame} position={[0, -1.607, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={[1.146, 0.382, 0.688]} />
        <mesh geometry={nodes.Portraits_Portraits_0.geometry} material={materials.Portraits} position={[0, -1.607, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={[1.146, 0.382, 0.688]} />
      </group>
    </RigidBody>
  )
}

useGLTF.preload('/vr_gallery.glb')
